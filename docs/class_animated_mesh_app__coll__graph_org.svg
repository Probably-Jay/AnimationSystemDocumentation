<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.0.6 (20230106.0513)
 -->
<!-- Title: AnimatedMeshApp Pages: 1 -->
<svg width="647pt" height="918pt"
 viewBox="0.00 0.00 646.50 918.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 914)">
<title>AnimatedMeshApp</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#999999" stroke="#666666" points="547,-558 0,-558 0,0 547,0 547,-558"/>
<text text-anchor="middle" x="273.5" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00">{AnimatedMeshApp</text>
<text text-anchor="start" x="8" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; std::unique_ptr&lt; gef::SpriteRenderer &gt; sprite_renderer_</text>
<text text-anchor="start" x="8" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::unique_ptr&lt; gef::Renderer3D &gt; renderer_3d_</text>
<text text-anchor="start" x="8" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::unique_ptr&lt; gef::InputManager &gt; input_manager_</text>
<text text-anchor="start" x="8" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::unique_ptr&lt; GefExtensions::PrimitiveRenderer &gt; primitive_renderer_</text>
<text text-anchor="start" x="8" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::unique_ptr&lt; AnimationSystem::AnimationMainSystem &gt; animation_system_</text>
<text text-anchor="start" x="8" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::unique_ptr&lt; gef::Font &gt; font_</text>
<text text-anchor="start" x="8" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::weak_ptr&lt; IAnimatedMesh &gt; mesh_</text>
<text text-anchor="start" x="8" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::weak_ptr&lt; IAnimatedSprite &gt; skeleton_sprite_</text>
<text text-anchor="start" x="8" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::weak_ptr&lt; IAnimatedSprite &gt; atlas_sprite_</text>
<text text-anchor="start" x="8" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::weak_ptr&lt; IAnimatedSprite &gt; active_sprite_</text>
<text text-anchor="start" x="8" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::weak_ptr&lt; IAnimatedMesh &gt; active_mesh_</text>
<text text-anchor="start" x="8" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; gef::Vector4 camera_eye_</text>
<text text-anchor="start" x="8" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; gef::Vector4 camera_lookat_</text>
<text text-anchor="start" x="8" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; gef::Vector4 camera_up_</text>
<text text-anchor="start" x="8" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; gef::Vector4 effector_position_</text>
<text text-anchor="start" x="8" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ndc_zmin_</text>
<text text-anchor="start" x="8" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float fps_</text>
<text text-anchor="start" x="8" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float camera_fov_</text>
<text text-anchor="start" x="8" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float near_plane_</text>
<text text-anchor="start" x="8" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float far_plane_</text>
<text text-anchor="start" x="8" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;AnimatedMeshApp(gef::Platform &amp;platform)</text>
<text text-anchor="start" x="8" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Init() override</text>
<text text-anchor="start" x="8" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00">+ void LogError(AnimationSystem::PureResult &amp;&amp;result)</text>
<text text-anchor="start" x="8" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00">+ void CleanUp() override</text>
<text text-anchor="start" x="8" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool Update(float frameTime) override</text>
<text text-anchor="start" x="8" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Render() override</text>
<text text-anchor="start" x="8" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00">+ void set_ndc_zmin(float value)</text>
<text text-anchor="start" x="8" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; AnimationSystem::PureResult LoadSpritesAndAnimation()</text>
<text text-anchor="start" x="8" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void CreateWalkRunAnimationBlendTransition(AnimationSystem::Mesh::IMeshTreeAnimator const &amp;animator) const</text>
<text text-anchor="start" x="8" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void ResetIKEndEffector()</text>
<text text-anchor="start" x="8" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void UpdateUIValues()</text>
<text text-anchor="start" x="8" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void UpdateIkParameters(gef::Vector2 const &amp;mousePosition)</text>
<text text-anchor="start" x="8" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void UpdateBlendTreeSpeedParameter() const</text>
<text text-anchor="start" x="8" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; AnimationSystem::PureResult ConstructBlendTree(AnimationSystem::Mesh::IMeshTreeAnimator const &amp;animator) const</text>
<text text-anchor="start" x="8" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; AnimationSystem::PureResult LoadAnimations(AnimationSystem::Mesh::IMeshTreeAnimator &amp;animator) const</text>
<text text-anchor="start" x="8" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void SwapObject()</text>
<text text-anchor="start" x="8" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void Render2d() const</text>
<text text-anchor="start" x="8" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void Render3d() const</text>
<text text-anchor="start" x="8" y="-117" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void SwapAnimation() const</text>
<text text-anchor="start" x="8" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void SetUpViewMatrix() const</text>
<text text-anchor="start" x="8" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void RenderEndEffector() const</text>
<text text-anchor="start" x="8" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void SetPlayerPosition() const</text>
<text text-anchor="start" x="8" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; AnimationSystem::PureResult LoadMeshAndAnimation()</text>
<text text-anchor="start" x="8" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void InitFont() const</text>
<text text-anchor="start" x="8" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void DrawHUD() const</text>
<text text-anchor="start" x="8" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void SetupLights() const</text>
<text text-anchor="start" x="8" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void SetupCamera()</text>
<text text-anchor="start" x="8" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static void SwapAnimation(AnimationSystem::Sprite::ISpriteAnimator &amp;animator)</text>
<text text-anchor="middle" x="273.5" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:title=" ">
<polygon fill="white" stroke="#bfbfbf" points="233.5,-706.5 147.5,-706.5 147.5,-676.5 233.5,-676.5 233.5,-706.5"/>
<text text-anchor="middle" x="190.5" y="-694.5" font-family="Helvetica,sans-Serif" font-size="10.00">{gef::Application</text>
<text text-anchor="middle" x="190.5" y="-683.5" font-family="Helvetica,sans-Serif" font-size="10.00">||}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M195.61,-665.23C200.46,-641.22 208.33,-602.32 217.24,-558.27"/>
<polygon fill="none" stroke="#63b8ff" points="192.21,-664.39 193.66,-674.89 199.07,-665.78 192.21,-664.39"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:title=" ">
<polygon fill="white" stroke="#bfbfbf" points="295.5,-706.5 251.5,-706.5 251.5,-676.5 295.5,-676.5 295.5,-706.5"/>
<text text-anchor="middle" x="273.5" y="-694.5" font-family="Helvetica,sans-Serif" font-size="10.00">{string</text>
<text text-anchor="middle" x="273.5" y="-683.5" font-family="Helvetica,sans-Serif" font-size="10.00">||}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M273.5,-676.37C273.5,-656.45 273.5,-617.34 273.5,-571.14"/>
<polygon fill="none" stroke="#404040" points="273.5,-571.17 269.5,-565.17 273.5,-559.17 277.5,-565.17 273.5,-571.17"/>
<text text-anchor="middle" x="331.5" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;error_message_</text>
<text text-anchor="middle" x="331.5" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;walkingToRunningUIString</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="struct_animation_system_1_1_blend_lerp_value.html" target="_top" xlink:title="A flot representing the value of a blend.">
<polygon fill="white" stroke="#666666" points="521,-767 314,-767 314,-616 521,-616 521,-767"/>
<text text-anchor="middle" x="417.5" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">{AnimationSystem::BlendLerpValue</text>
<text text-anchor="start" x="322" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">||+ &#160;BlendLerpValue()</text>
<text text-anchor="start" x="322" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;BlendLerpValue(float const v)</text>
<text text-anchor="start" x="322" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;BlendLerpValue(NormalisedFloat const v)</text>
<text text-anchor="start" x="322" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetBeginValue()</text>
<text text-anchor="start" x="322" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetEndValue()</text>
<text text-anchor="start" x="322" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool IsZero() const</text>
<text text-anchor="start" x="322" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool IsOne() const</text>
<text text-anchor="start" x="322" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;operator float() const</text>
<text text-anchor="start" x="322" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Invert()</text>
<text text-anchor="start" x="322" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Increase(float const delta)</text>
<text text-anchor="start" x="322" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Decrease(float const delta)</text>
<text text-anchor="middle" x="417.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M403.01,-615.51C399.92,-602.24 396.39,-588.64 392.5,-576 391.97,-574.27 391.43,-572.54 390.89,-570.8"/>
<polygon fill="none" stroke="#404040" points="390.85,-570.7 385.22,-566.2 387.21,-559.27 392.84,-563.77 390.85,-570.7"/>
<text text-anchor="middle" x="459" y="-584.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;idleToMovingBlendPercent</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="struct_animation_system_1_1_normalised_float.html" target="_top" xlink:title="Float value guaranteed to always be normalised to the range [0, 1].">
<polygon fill="white" stroke="#666666" points="638.5,-910 196.5,-910 196.5,-814 638.5,-814 638.5,-910"/>
<text text-anchor="middle" x="417.5" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00">{AnimationSystem::NormalisedFloat</text>
<text text-anchor="start" x="204.5" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float value_</text>
<text text-anchor="start" x="204.5" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;NormalisedFloat(int const v)</text>
<text text-anchor="start" x="204.5" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;NormalisedFloat(float const v)</text>
<text text-anchor="start" x="204.5" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;operator float() const</text>
<text text-anchor="start" x="204.5" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00">+ float GetLerpFromValue(float const begin, float const end) const</text>
<text text-anchor="start" x="204.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">+ static NormalisedFloat SetValueFromInverseLerp(float const begin, float const end, float const v)</text>
<text text-anchor="middle" x="417.5" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M417.5,-813.61C417.5,-803.15 417.5,-791.74 417.5,-780.24"/>
<polygon fill="none" stroke="#404040" points="417.5,-780.16 413.5,-774.16 417.5,-768.16 421.5,-774.16 417.5,-780.16"/>
<text text-anchor="middle" x="434.5" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;value_</text>
</g>
</g>
</svg>
