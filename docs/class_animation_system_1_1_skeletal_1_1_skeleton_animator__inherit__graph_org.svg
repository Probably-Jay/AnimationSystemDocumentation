<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.0.6 (20230106.0513)
 -->
<!-- Title: AnimationSystem::Skeletal::SkeletonAnimator Pages: 1 -->
<svg width="503pt" height="247pt"
 viewBox="0.00 0.00 503.00 247.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 243)">
<title>AnimationSystem::Skeletal::SkeletonAnimator</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Animator for skeletal animations.">
<polygon fill="#999999" stroke="#666666" points="495,-118 0,-118 0,0 495,0 495,-118"/>
<text text-anchor="middle" x="247.5" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00">{AnimationSystem::Skeletal::SkeletonAnimator</text>
<text text-anchor="start" x="8" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00">||+ void Create(unique_ptr&lt; JsonResult &gt; const &amp;jsonDoc, StringIDMap&lt; Bone &gt; const &amp;bonesInInitialPosition)</text>
<text text-anchor="start" x="8" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Update(float frameTime)</text>
<text text-anchor="start" x="8" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">+ float GetCurrentAnimationTime() const override</text>
<text text-anchor="start" x="8" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00">+ void ApplyAnimation(Bone &amp;bone) const</text>
<text text-anchor="start" x="8" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::vector&lt; StringId &gt; GetAllAnimationIDs() const</text>
<text text-anchor="start" x="8" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::vector&lt; string &gt; GetAllAnimationNames() const override</text>
<text text-anchor="start" x="8" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetCurrentAnimation(string const &amp;newName) override</text>
<text text-anchor="start" x="8" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::optional&lt; string &gt; CurrentAnimationName() const override</text>
<text text-anchor="middle" x="247.5" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="class_animation_system_1_1_sprite_1_1_i_sprite_animator.html" target="_top" xlink:title="An animator for a sprite.">
<polygon fill="white" stroke="#666666" points="411.5,-239 83.5,-239 83.5,-154 411.5,-154 411.5,-239"/>
<text text-anchor="middle" x="247.5" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00">{AnimationSystem::Sprite::ISpriteAnimator</text>
<text text-anchor="start" x="91.5" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00">||+ virtual ~ISpriteAnimator()=default</text>
<text text-anchor="start" x="91.5" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void SetCurrentAnimation(std::string const &amp;animationName)=0</text>
<text text-anchor="start" x="91.5" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual std::optional&lt; std::string &gt; CurrentAnimationName() const =0</text>
<text text-anchor="start" x="91.5" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual float GetCurrentAnimationTime() const =0</text>
<text text-anchor="start" x="91.5" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual std::vector&lt; std::string &gt; GetAllAnimationNames() const =0</text>
<text text-anchor="middle" x="247.5" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M247.5,-142.41C247.5,-134.5 247.5,-126.32 247.5,-118.31"/>
<polygon fill="none" stroke="#63b8ff" points="244,-142.23 247.5,-152.23 251,-142.23 244,-142.23"/>
</g>
</g>
</svg>
